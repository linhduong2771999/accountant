import {createAction} from "redux-actions";

const FETCH_USER_WORK_MANAGER_REQUEST = "FETCH_USER_WORK_MANAGER_REQUEST";
const FETCH_USER_WORK_MANAGER_SUCCESS = "FETCH_USER_WORK_MANAGER_SUCCESS";
const FETCH_USER_WORK_MANAGER_ERROR = "FETCH_USER_WORK_MANAGER_ERROR";

export const fetchUserWorkManagerRequest = createAction(FETCH_USER_WORK_MANAGER_REQUEST);
export const fetchUserWorkManagerSuccess = createAction(FETCH_USER_WORK_MANAGER_SUCCESS);
export const fetchUserWorkManagerError = createAction(FETCH_USER_WORK_MANAGER_ERROR);

const FETCH_ONE_USER_WORK_MANAGER_REQUEST = "FETCH_ONE_USER_WORK_MANAGER_REQUEST";
const FETCH_ONE_USER_WORK_MANAGER_SUCCESS = "FETCH_ONE_USER_WORK_MANAGER_SUCCESS";
const FETCH_ONE_USER_WORK_MANAGER_ERROR = "FETCH_ONE_USER_WORK_MANAGER_ERROR";

export const fetchOneUserWorkManagerRequest = createAction(FETCH_ONE_USER_WORK_MANAGER_REQUEST);
export const fetchOneUserWorkManagerSuccess = createAction(FETCH_ONE_USER_WORK_MANAGER_SUCCESS);
export const fetchOneUserWorkManagerError = createAction(FETCH_ONE_USER_WORK_MANAGER_ERROR);

const CREATE_TASK_WORK_MANAGER_REQUEST = "CREATE_TASK_WORK_MANAGER_REQUEST";
const CREATE_TASK_WORK_MANAGER_SUCCESS = "CREATE_TASK_WORK_MANAGER_SUCCESS";
const CREATE_TASK_WORK_MANAGER_ERROR = "CREATE_TASK_WORK_MANAGER_ERROR";

export const createTaskWorkManagerRequest = createAction(CREATE_TASK_WORK_MANAGER_REQUEST);
export const createTaskWorkManagerSuccess = createAction(CREATE_TASK_WORK_MANAGER_SUCCESS);
export const createTaskWorkManagerError = createAction(CREATE_TASK_WORK_MANAGER_ERROR);

const UPDATE_TASK_WORK_MANAGER_REQUEST = "UPDATE_TASK_WORK_MANAGER_REQUEST";
const UPDATE_TASK_WORK_MANAGER_SUCCESS = "UPDATE_TASK_WORK_MANAGER_SUCCESS";
const UPDATE_TASK_WORK_MANAGER_ERROR = "UPDATE_TASK_WORK_MANAGER_ERROR";

export const updateTaskWorkManagerRequest = createAction(UPDATE_TASK_WORK_MANAGER_REQUEST);
export const updateTaskWorkManagerSuccess = createAction(UPDATE_TASK_WORK_MANAGER_SUCCESS);
export const updateTaskWorkManagerError = createAction(UPDATE_TASK_WORK_MANAGER_ERROR);

const DELETE_ONE_TASK_WORK_MANAGER_REQUEST = "DELETE_ONE_TASK_WORK_MANAGER_REQUEST";
const DELETE_ONE_TASK_WORK_MANAGER_SUCCESS = "DELETE_ONE_TASK_WORK_MANAGER_SUCCESS";
const DELETE_ONE_TASK_WORK_MANAGER_ERROR = "DELETE_ONE_TASK_WORK_MANAGER_ERROR";

export const deleteOneTaskWorkManagerRequest = createAction(DELETE_ONE_TASK_WORK_MANAGER_REQUEST);
export const deleteOneTaskWorkManagerSuccess = createAction(DELETE_ONE_TASK_WORK_MANAGER_SUCCESS);
export const deleteOneTaskWorkManagerError = createAction(DELETE_ONE_TASK_WORK_MANAGER_ERROR);

const DELETE_ALL_TASK_WORK_MANAGER_REQUEST = "DELETE_ALL_TASK_WORK_MANAGER_REQUEST";
const DELETE_ALL_TASK_WORK_MANAGER_SUCCESS = "DELETE_ALL_TASK_WORK_MANAGER_SUCCESS";
const DELETE_ALL_TASK_WORK_MANAGER_ERROR = "DELETE_ALL_TASK_WORK_MANAGER_ERROR";

export const deleteAllTaskWorkManagerRequest = createAction(DELETE_ALL_TASK_WORK_MANAGER_REQUEST);
export const deleteAllTaskWorkManagerSuccess = createAction(DELETE_ALL_TASK_WORK_MANAGER_SUCCESS);
export const deleteAllTaskWorkManagerError = createAction(DELETE_ALL_TASK_WORK_MANAGER_ERROR);

const GET_USER_BY_ID_WORK_MANAGER = "GET_USER_BY_ID_WORK_MANAGER"

export const getUserByIdWorkManager = createAction(GET_USER_BY_ID_WORK_MANAGER);

const GET_TASK_BY_ID_WORK_MANAGER = "GET_TASK_BY_ID_WORK_MANAGER"

export const getTaskByIdWorkManager = createAction(GET_TASK_BY_ID_WORK_MANAGER);

const SEARCH_USER_WORK_MANAGER = "SEARCH_USER_WORK_MANAGER";

export const searchUserWorkManager = createAction(SEARCH_USER_WORK_MANAGER);