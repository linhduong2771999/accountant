{"version":3,"sources":["helpers/return.js","components/SearchControl/SearchControl.js","components/Pagination/Pagination.js","components/DatePicker/DatePicker.js","modules/WorkManager/WorkManagerForm/WorkManagerForm.js","modules/WorkManager/WorkManager.js"],"names":["filterText","str","SearchControl","props","handleClickOutside","event","setState","isOpenSuggestion","onHandleSearchChange","e","target","value","name","onHanldeSearchSubmit","preventDefault","searchUser","state","searchText","returnSuggestionValue","searchInput","current","focus","renderSuggestion","suggestionValue","length","map","user","index","className","key","onClick","alt","src","avatarURL","email","React","createRef","this","filter","toLowerCase","trim","includes","replace","position","level","major","phone","onSubmit","xs","sm","md","lg","xl","onChange","placeholder","autoComplete","ref","console","log","style","marginLeft","icon","type","htmlType","Component","onClickOutside","Index","page","taskPerPage","totalPages","currentPage","startIndex","endIndex","Math","min","totalItem","onChangePage","prevProps","prevState","marginRight","pageSize","total","getDerivedStateFromProps","ceil","CustomInputDatePicker","forwardRef","selectInputType","suffix","title","color","dateValue","setDate","showTimeSelect","timeFormat","timeIntervals","timeCaption","dateFormat","selected","date","Number","customInput","Option","Select","WorkManagerForm","hanldeCancelModalPopup","actions","hideModal","handleSubmit","taskInfo","taskId","updateTaskWorkManagerAPI","createTaskWorkManagerAPI","uuidv4","createDate","Date","body","status","startDate","endDate","id","userById","callBack","Notifies","fallback","createTaskWorkManagerRequest","updateDate","fallBack","updateTaskWorkManagerRequest","handleOnchange","validateRequired","handleOnChangeSelect","setStartDate","setEndDate","isOpenModal","isAddUser","isLoading","visible","closable","width","onCancel","footer","form","disabled","spinning","nextProps","taskById","connect","modalPopupReducer","dispatch","bindActionCreators","ModalPopupActions","WorkManagerActions","WorkManager","componentDidMount","fetchUserWorkManagerRequest","window","$","tooltip","handleOpenModalPopup","openModal","addModal","editModal","getUserByIdWorkManager","getTaskByIdWorkManager","hanleDeleteAllTaskWorkManager","userId","Swal","fire","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","focusCancel","then","result","deleteAllTaskWorkManagerRequest","handleDeleteOneTaskWorkManager","deleteOneTaskWorkManagerRequest","renderUser","userList","item","task","renderTask","renderNumberOfTaskStatus","numberOfTaskComplete","numberOfTaskInProgress","numberOfTaskSuspended","height","placement","parseInt","percent","data-toggle","href","renderStyleOfTaskStatus","fontIcon","marginTop","aria-hidden","data-placement","moment","format","diff","block","every","x","push","renderSkeleton","active","avatar","data","renderTaskList","taskList","slice","gutter","searchUserWorkManager","borderRight","tip","image","Empty","PRESENTED_IMAGE_SIMPLE","Pagination","workManagerReducer","oneUser"],"mappings":"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","file":"static/js/10.cdf26524.chunk.js","sourcesContent":["export const filterText = (str) => {\r\n    return str\r\n}\r\n\r\n// const xoa_dau = str => {\r\n//     str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, \"a\");\r\n//     str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, \"e\");\r\n//     str = str.replace(/ì|í|ị|ỉ|ĩ/g, \"i\");\r\n//     str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, \"o\");\r\n//     str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, \"u\");\r\n//     str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, \"y\");\r\n//     str = str.replace(/đ/g, \"d\");\r\n//     str = str.replace(/À|Á|Ạ|Ả|Ã|Â|Ầ|Ấ|Ậ|Ẩ|Ẫ|Ă|Ằ|Ắ|Ặ|Ẳ|Ẵ/g, \"A\");\r\n//     str = str.replace(/È|É|Ẹ|Ẻ|Ẽ|Ê|Ề|Ế|Ệ|Ể|Ễ/g, \"E\");\r\n//     str = str.replace(/Ì|Í|Ị|Ỉ|Ĩ/g, \"I\");\r\n//     str = str.replace(/Ò|Ó|Ọ|Ỏ|Õ|Ô|Ồ|Ố|Ộ|Ổ|Ỗ|Ơ|Ờ|Ớ|Ợ|Ở|Ỡ/g, \"O\");\r\n//     str = str.replace(/Ù|Ú|Ụ|Ủ|Ũ|Ư|Ừ|Ứ|Ự|Ử|Ữ/g, \"U\");\r\n//     str = str.replace(/Ỳ|Ý|Ỵ|Ỷ|Ỹ/g, \"Y\");\r\n//     str = str.replace(/Đ/g, \"D\");\r\n//     return str;\r\n// }","import React, { Component } from \"react\";\r\nimport { Col, Button, Input ,Icon, Row} from \"antd\";\r\nimport  \"./SearchControl.scss\";\r\nimport { filterText } from \"../../helpers/return\";\r\nimport onClickOutside from \"react-onclickoutside\";\r\n\r\n\r\nclass SearchControl extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          searchText: \"\",\r\n          isOpenSuggestion: false\r\n        };\r\n\r\n        this.searchInput = React.createRef();\r\n      }\r\n\r\n    handleClickOutside = (event) => {\r\n        this.setState({\r\n          isOpenSuggestion: false\r\n        })  \r\n    }\r\n    onHandleSearchChange = (e) => {\r\n        const { value, name } = e.target;\r\n        if(value){\r\n          this.setState({\r\n            [name]: value,\r\n            isOpenSuggestion: true\r\n          });\r\n        }\r\n        else{\r\n          this.setState({\r\n            [name]: value,\r\n            isOpenSuggestion: false\r\n          });\r\n        }\r\n      };\r\n    \r\n    onHanldeSearchSubmit = (e) => {\r\n      e.preventDefault();\r\n      this.props.searchUser(this.state.searchText);\r\n      this.setState({\r\n        isOpenSuggestion: false\r\n      })\r\n    };\r\n\r\n    returnSuggestionValue = (name) => {\r\n      this.setState({\r\n        searchText: name,\r\n        isOpenSuggestion: false\r\n      }, () => {\r\n        this.searchInput.current.focus()\r\n      })\r\n    }\r\n\r\n    renderSuggestion = (suggestionValue) => {\r\n      var result = [];\r\n      if(suggestionValue.length && this.state.searchText){\r\n        result = suggestionValue.map((user, index) => {\r\n          return (\r\n            <div className=\"list-group-item d-flex\" key={index} onClick={() => this.returnSuggestionValue(user.name)}>\r\n                <div className=\"item-avatar mr-3\">\r\n                  <img alt=\"avatar\" src={user.avatarURL} /> \r\n                </div>\r\n                <div className=\"item-name d-flex align-items-center\">\r\n                    <p className=\"mb-0 font-weight-bold font-size-14\">{user.name}</p>\r\n                </div>\r\n                <div className=\"mx-2 font-weight-bold d-flex align-items-center\">\r\n                    -\r\n                </div>\r\n                <div className=\"item-email d-flex align-items-center\">\r\n                    <p className=\"mb-0 text-secondary font-size-14\">{user.email}</p>  \r\n                </div>\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n      else {\r\n        return result = <p className=\"text-center mb-0 py-2 font-weight-bold font-size-14\">Không tìm thấy kết quả</p>\r\n      }\r\n      return result;\r\n    }\r\n  render() {\r\n    var { searchText , isOpenSuggestion} = this.state;\r\n    var {suggestionValue} = this.props; \r\n\r\n    if(searchText){\r\n      suggestionValue = suggestionValue.filter((value) => {\r\n        return filterText(value.name)\r\n                  .toLowerCase()\r\n                  .trim()\r\n                  .includes(searchText.toLowerCase()) ||\r\n                filterText(value.email)\r\n                  .toLowerCase()\r\n                  .trim()\r\n                  .replace(/\\s+/g, \"\")\r\n                  .includes(searchText.toLowerCase()) || \r\n                  filterText(value.position)\r\n                  .toLowerCase()\r\n                  .trim()\r\n                  .includes(searchText.toLowerCase()) ||\r\n                filterText(value.level)\r\n                  .toLowerCase()\r\n                  .trim()\r\n                  .includes(searchText.toLowerCase()) ||\r\n                filterText(value.major)\r\n                  .toLowerCase()\r\n                  .trim()\r\n                  .includes(searchText.toLowerCase()) ||\r\n                filterText(value.phone)\r\n                  .toLowerCase()\r\n                  .trim()\r\n                  .replace(/\\s+/g, \"\")\r\n                  .includes(searchText.toLowerCase());\r\n      })\r\n    }\r\n\r\n    return (\r\n      <Row>\r\n        <form onSubmit={this.onHanldeSearchSubmit}>\r\n          <Col xs={16} sm={16} md={20} lg={16} xl={20} className=\"search-input-wrapper\">\r\n            <Input\r\n              className=\"search-input \"\r\n              name=\"searchText\"\r\n              value={searchText}\r\n              onChange={this.onHandleSearchChange}\r\n              placeholder=\"Gõ không dấu\"\r\n              autoComplete=\"off\"\r\n              ref={this.searchInput}\r\n            />\r\n            {\r\n              isOpenSuggestion ? (\r\n                <div className=\"suggestion\" onClick={(e) => {\r\n                  if(!e.target){\r\n                    console.log(\"ok\");\r\n                    \r\n                  }\r\n                }}>\r\n                  <div className=\"list-group\">\r\n                    {this.renderSuggestion(suggestionValue) }\r\n                  </div>\r\n                </div>\r\n              ) : null\r\n            } \r\n          </Col>\r\n          <Col xs={8} sm={8} md={4} lg={8} xl={4}>\r\n            <Button\r\n              style={{ marginLeft: \"1rem\" }}\r\n              icon=\"search\"\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n            >\r\n              Tìm kiếm\r\n            </Button>\r\n          </Col>\r\n        </form>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default onClickOutside(SearchControl);\r\n","import React, { Component, Fragment } from 'react';\r\nimport {Pagination} from \"antd\";\r\nclass Index extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            currentPage: 1,\r\n            startIndex: 0,\r\n            endIndex: 3,\r\n            totalPages: \"\"\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps = (prevProps, prevState) => {\r\n        return {\r\n            totalPages: Math.ceil(prevProps.totalItem / 3),\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.totalItem !== this.props.totalItem) {\r\n            this.onChange(this.state.currentPage, 3)\r\n\t\t}\r\n    }\r\n\r\n    onChange = (page, taskPerPage) => {            \r\n        const {  totalPages , currentPage} = this.state;\r\n        if (page < 1) { page = 1 }\r\n        else if (page > totalPages) { page = totalPages }\r\n        const startIndex = (page - 1) * taskPerPage;\r\n        const endIndex = Math.min(startIndex + taskPerPage - 1, this.props.totalItem - 1);\r\n        this.setState({\r\n            currentPage: page,\r\n        }, () => {\r\n            this.props.onChangePage({\r\n                startIndex,\r\n                endIndex,\r\n                totalPages,\r\n                currentPage: page\r\n            });\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Pagination \r\n                    style={{marginRight: \"2rem\"}} \r\n                    pageSize={3}\r\n                    total={this.props.totalItem} \r\n                    current={this.state.currentPage}\r\n                    onChange={this.onChange}\r\n                />\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Index;","import React, { Component, Fragment, forwardRef  } from \"react\";\r\nimport {Input, Tooltip, Icon} from \"antd\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"./DatePicker.scss\";\r\n\r\nconst CustomInputDatePicker = forwardRef(({ value, onClick , selectInputType}, ref) => (\r\n    <Input \r\n        suffix={\r\n            <Tooltip title=\"Chọn ngày\">\r\n                <Icon type=\"calendar\" style={{ color: 'rgba(0,0,0,.45)' }} />\r\n            </Tooltip>\r\n        }\r\n        type=\"text\"\r\n        onClick={onClick} \r\n        value={value ? value : (selectInputType === \"start\" ? \"Chọn ngày bắt đầu\" : \"Chọn ngày kết thúc\")}\r\n    />\r\n));\r\n\r\nclass Index extends Component {\r\n    render() {\r\n        const {dateValue, setDate, selectInputType} = this.props;\r\n        return (\r\n            <Fragment>\r\n                <DatePicker \r\n                    showTimeSelect\r\n                    timeFormat=\"HH:mm\"\r\n                    timeIntervals={15}\r\n                    timeCaption=\"Thời gian\"\r\n                    dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                    selected={dateValue}\r\n                    onChange={ (date) => setDate(Number(date))}\r\n                    customInput={<CustomInputDatePicker selectInputType={selectInputType} />} \r\n                />\r\n          </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Index;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Modal, Button, Spin, Input, Select } from \"antd\";\r\nimport {connect} from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { ModalPopupActions, WorkManagerActions } from \"../../../actions/index\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport DatePicker from \"../../../components/DatePicker/DatePicker\";\r\nimport * as Notifies from \"../../../components/Notifies/Notifies\";\r\n\r\nconst {Option} = Select;\r\nclass WorkManagerForm extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            taskInfo: {\r\n                taskId: \"\",\r\n                name: \"\",\r\n                status: \"\",\r\n                startDate: \"\",\r\n                endDate: \"\",\r\n                createDate: \"\"\r\n            },\r\n            validateRequired: true\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps = (nextProps, prevState) => {       \r\n        if(!nextProps.isAddUser &&  nextProps.taskById.taskId !== prevState.taskInfo.taskId ){                 \r\n            return {\r\n                taskInfo: {\r\n                    taskId: nextProps.taskById.taskId,\r\n                    name: nextProps.taskById.name,\r\n                    status: nextProps.taskById.status,\r\n                    startDate: nextProps.taskById.startDate,\r\n                    endDate: nextProps.taskById.endDate,\r\n                    createDate:  nextProps.taskById.createDate\r\n                }\r\n            }\r\n        }\r\n        else if(nextProps.isAddUser && nextProps.taskById.taskId === prevState.taskInfo.taskId){                       \r\n            return {\r\n                taskInfo: {\r\n                    taskId: \"\",\r\n                    name: \"\",               \r\n                    status: \"\",\r\n                    startDate: \"\",\r\n                    endDate: \"\"\r\n                }\r\n            }\r\n        }\r\n        return null\r\n    }\r\n\r\n    hanldeCancelModalPopup = () => {\r\n        this.props.actions.hideModal(false);\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        const {taskInfo} = this.state;\r\n        e.preventDefault();\r\n        if(this.state.taskInfo.taskId){\r\n            this.updateTaskWorkManagerAPI(taskInfo)            \r\n        }\r\n        else {\r\n            this.createTaskWorkManagerAPI(taskInfo);            \r\n        }\r\n        // this.props.actions.hideModal(false); // ẩn modal sau khi submit form\r\n    }\r\n\r\n    createTaskWorkManagerAPI = (taskInfo) => {\r\n        const taskId = uuidv4();\r\n        const createDate = new Date();\r\n        const body = {\r\n            taskInfo: {\r\n                taskId: taskId, \r\n                name: taskInfo.name,\r\n                status: taskInfo.status,\r\n                startDate: taskInfo.startDate,\r\n                endDate: taskInfo.endDate,\r\n                createDate: Number(createDate) // lấy ngày tạo task\r\n            },\r\n            id: this.props.userById.id,\r\n            callBack: () => {\r\n                return Notifies.createSuccess();\r\n            },\r\n            fallback: () => {\r\n                return Notifies.errorMessege();\r\n            }\r\n        }\r\n        this.props.actions.createTaskWorkManagerRequest(body); \r\n    }\r\n\r\n    updateTaskWorkManagerAPI = (taskInfo) => {\r\n        const updateDate = new Date();\r\n        const body = {\r\n            taskInfo: {\r\n                taskId: taskInfo.taskId,  // giữ nguyên id và ngày tạo \r\n                name: taskInfo.name,\r\n                status: taskInfo.status,\r\n                startDate: taskInfo.startDate,\r\n                endDate: taskInfo.endDate,\r\n                createDate: taskInfo.createDate, // giữ nguyên id và ngày tạo \r\n                updateDate: Number(updateDate) // cập nhật ngày sửa\r\n            },\r\n            id: this.props.userById.id,\r\n            callBack: () => {\r\n                return Notifies.updateSuccess();\r\n            },\r\n            fallBack: () => {\r\n                return Notifies.errorMessege();\r\n            }\r\n        }\r\n        this.props.actions.updateTaskWorkManagerRequest(body); \r\n    }\r\n\r\n    handleOnchange = (e) => {\r\n        const {name, value} = e.target;\r\n        this.setState({\r\n            taskInfo: {\r\n                ...this.state.taskInfo,\r\n                [name]: value,\r\n            },\r\n        }, () => {\r\n            this.validateRequired(this.state.taskInfo)\r\n        }) \r\n    }\r\n\r\n    handleOnChangeSelect = (value) => {        \r\n        this.setState({ \r\n            taskInfo: {\r\n                ...this.state.taskInfo,\r\n                status: value \r\n            }\r\n        }, () => {\r\n            this.validateRequired(this.state.taskInfo);    \r\n        });\r\n    }\r\n\r\n    setStartDate = (date) => {\r\n        this.setState({\r\n            taskInfo: {\r\n                ...this.state.taskInfo,\r\n                startDate: date\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    setEndDate = (date) => {\r\n        this.setState({\r\n            taskInfo: {\r\n                ...this.state.taskInfo,\r\n                endDate: date\r\n            }\r\n        })\r\n    }\r\n\r\n    validateRequired = (taskInfo) => {\r\n        if(taskInfo.name !== \"\" && taskInfo.status !== \"\" && taskInfo.startDate !== \"\" && taskInfo.endDate !== \"\"){\r\n            this.setState({\r\n                validateRequired: false\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                validateRequired: true\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {isOpenModal, isAddUser, isLoading, userById} = this.props;\r\n        const { validateRequired, taskInfo} = this.state;\r\n        return (\r\n        <Modal\r\n            title={\r\n                isAddUser ? \r\n                <h3 className=\"text-white mb-0\">Thêm mới công việc</h3>\r\n                : \r\n                <h3 className=\"text-white mb-0\">Sửa công việc</h3>\r\n            }\r\n            visible={isOpenModal}\r\n            closable={false}\r\n            width={700}\r\n            onCancel={this.hanldeCancelModalPopup}\r\n            footer={[\r\n            <Fragment key=\"1\">\r\n                <Button type=\"default\" onClick={this.hanldeCancelModalPopup}>\r\n                Đóng\r\n                </Button>\r\n                <Button\r\n                form=\"WorkManageForm\"\r\n                key=\"submit\"\r\n                htmlType=\"submit\"\r\n                type=\"primary\"   \r\n                disabled={validateRequired}             \r\n                >\r\n                    {isAddUser ? \"Thêm\" : \"Sửa\"}\r\n                </Button>\r\n            </Fragment>,\r\n            ]}\r\n        >\r\n            <Spin spinning={isLoading}>\r\n                <form onSubmit={this.handleSubmit}  id=\"WorkManageForm\">\r\n                    <div className=\"form-info row\">\r\n                        <div className=\"col-6 info-left\">\r\n                            <p className=\"mb-3 font-size-14\"><strong>Tên: </strong>{userById.name}</p>\r\n                            <p className=\"mb-3 font-size-14\"><strong>Email: </strong>{userById.email}</p>\r\n                            <p className=\"mb-3 font-size-14\"><strong>Phone: </strong>{userById.phone}</p>\r\n                        </div>  \r\n                        <div className=\"col-6 info-right\">\r\n                            <p className=\"mb-3 font-size-14\"><strong>Trình độ: </strong><span className=\"text-capitalize\">{userById.level ? userById.level : \"Chưa có\"}</span></p>\r\n                            <p className=\"mb-3 font-size-14\"><strong>Chuyên môn: </strong>{userById.major ? userById.major : \"Chưa có\"}</p>\r\n                            <p className=\"mb-3 font-size-14\"><strong>Chức vụ: </strong>{userById.position}</p>\r\n                        </div>\r\n                    </div>\r\n                    <hr />\r\n                    <p className=\"text-center mb-0 \">Vui lòng điền đầy đủ tất cả thông tin</p>\r\n                    <div className=\"form-input mt-3\">\r\n                        <div className=\"form-group row \">\r\n                            <label className=\"col-2 text-right\"><strong>Công việc*:</strong> </label>\r\n                            <div className=\"col-10\">\r\n                                <Input \r\n                                    name=\"name\"\r\n                                    type=\"text\"\r\n                                    value={taskInfo.name} \r\n                                    placeholder=\"Tên công việc\" \r\n                                    autoComplete=\"off\"\r\n                                    onChange={this.handleOnchange}\r\n                                    onClick={this.handleOnchange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row \">\r\n                            <label className=\"col-2 text-right\"><strong>Bắt đầu*:</strong> </label>\r\n                            <div className=\"col-4\">\r\n                                <DatePicker \r\n                                    selectInputType={\"start\"} \r\n                                    dateValue={taskInfo.startDate}\r\n                                    setDate={(date) => this.setStartDate(date)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row \">\r\n                            <label className=\"col-2 text-right\"><strong>Kết thúc*:</strong> </label>\r\n                            <div className=\"col-4\">\r\n                                <DatePicker \r\n                                    selectInputType={\"end\"} \r\n                                    dateValue={taskInfo.endDate}\r\n                                    setDate={(date) => this.setEndDate(date)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row \">\r\n                            <label className=\"col-2 text-right\"><strong>Tình trạng*:</strong> </label>\r\n                            <div className=\"col-4\">\r\n                                <Select   value={taskInfo.status}  onChange={(value) => this.handleOnChangeSelect(value)}>\r\n                                    <Option value=\"\" >Tình trạng công việc</Option>\r\n                                    <Option value=\"Bắt đầu\" >Bắt đầu</Option>\r\n                                    <Option value=\"Trong tiến trình\" >Trong tiến trình</Option>\r\n                                    <Option value=\"Hoàn thành\" >Hoàn thành</Option>\r\n                                    <Option value=\"Tạm gián đoạn\" >Tạm gián đoạn</Option>\r\n                                </Select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </Spin>\r\n        </Modal>\r\n        );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isOpenModal: state.modalPopupReducer.isOpenModal,\r\n        isAddUser: state.modalPopupReducer.isAddUser,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        actions: bindActionCreators(\r\n            {...ModalPopupActions, ...WorkManagerActions},\r\n            dispatch\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WorkManagerForm);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Col, Row, Button, Spin, Skeleton, Icon, Tag, Empty, Tooltip, Progress  } from \"antd\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { WorkManagerActions, ModalPopupActions } from \"../../actions/index\";\r\nimport { filterText } from \"../../helpers/return\";\r\nimport moment from \"moment\";\r\nimport SearchControl from \"../../components/SearchControl/SearchControl\";\r\nimport Pagination from \"../../components/Pagination/Pagination\";\r\nimport WorkManagerForm from \"./WorkManagerForm/WorkManagerForm\";\r\nimport Swal from \"sweetalert2\";\r\nclass WorkManager extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      startIndex: 0,\r\n      endIndex: 2,\r\n      currentPage: 1,\r\n      totalPages: 1\r\n     }\r\n  }\r\n  componentDidMount = () => {\r\n    this.props.actions.fetchUserWorkManagerRequest();\r\n    window.$('[data-toggle=\"tooltip\"]').tooltip();\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    window.$('[data-toggle=\"tooltip\"]').tooltip();\r\n  }\r\n\r\n\r\n  handleOpenModalPopup = (e, type, userById, taskById) => { \r\n    e.preventDefault();   \r\n    const {openModal, addModal, editModal, getUserByIdWorkManager, getTaskByIdWorkManager} = this.props.actions;\r\n    openModal(true);\r\n    if(type === \"add\"){\r\n      addModal(true);\r\n      getUserByIdWorkManager(userById);\r\n    }else {\r\n      editModal(false);      \r\n      getTaskByIdWorkManager(taskById);\r\n      getUserByIdWorkManager(userById);\r\n    }\r\n  }\r\n  \r\n  hanleDeleteAllTaskWorkManager = (userId) => {\r\n    return Swal.fire({\r\n      title: 'Bạn có chắc chắn xóa tất cả các công việc hiện có?',\r\n      text: \"Không thể khôi phục lại khi xóa\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Xóa luôn',\r\n      focusCancel: true\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.props.actions.deleteAllTaskWorkManagerRequest(userId);\r\n        Swal.fire(\r\n          'Xóa thành công',\r\n          'Success'\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  handleDeleteOneTaskWorkManager = (e, userId , taskId) => {\r\n    e.preventDefault();\r\n    const body = { userId, taskId };\r\n    return Swal.fire({\r\n      title: 'Bạn có chắc chắn xóa ?',\r\n      text: \"Không thể khôi phục lại khi xóa\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Xóa luôn',\r\n      focusCancel: true\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.props.actions.deleteOneTaskWorkManagerRequest(body);\r\n        Swal.fire(\r\n          'Xóa thành công',\r\n          'Success'\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  renderUser = (userList) => {\r\n    var result = [];\r\n    if (userList) {\r\n      result = userList.map((item, index) => {\r\n        return (\r\n          <div className=\"list-group-item px-0\" key={index}>\r\n            <div className=\"item-avatar \">\r\n              <img alt=\"Avatar\" src={item.avatarURL} />\r\n            </div>\r\n            <div className=\"item-info\">\r\n              <h5>{item.name}</h5>\r\n              <p>{item.email}</p>\r\n            </div>\r\n            <div className=\"item-status\">\r\n              <span>\r\n                <Tag color=\"magenta\">{item.task ? `Tổng: ${item.task.length} công việc` : \"Chưa có\"}</Tag>\r\n              </span>\r\n            </div>\r\n            <div className=\"item-actions ml-xl-3\">\r\n                <Button type=\"default\" onClick={(e) => this.handleOpenModalPopup(e, \"add\", item)}>\r\n                  Thêm mới \r\n                  <Icon type=\"plus\" />\r\n                </Button>\r\n            </div>\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n    return result;\r\n  };\r\n  \r\n  renderTask = (userList) => {\r\n    var result = [];\r\n    if(userList){\r\n      result = userList.map((item, index) => {\r\n        if(item.task){ \r\n            const {numberOfTaskComplete, numberOfTaskInProgress, numberOfTaskSuspended } = this.renderNumberOfTaskStatus(item.task);\r\n            return (\r\n              <div className=\"item-wrapper mb-sm-5 mb-lg-4\" key={index}>\r\n                <div className=\"d-flex p-3\">\r\n                  <div className=\"mr-3\">\r\n                    <img src={item.avatarURL} className=\"d-block rounded-circle\" alt=\"Avatar\" width=\"45px\" height=\"45px\"/>\r\n                  </div>\r\n                  <div className=\"d-flex flex-column w-100\">\r\n                    {/*Thông tin user*/}\r\n                    <div className=\"item-main-info row\">\r\n                        <div className=\"main-info-left col-xs-6 col-lg-6 col-md-12 col-sm-12\">\r\n                          <div className=\"mb-2\">\r\n                            <strong> {item.name}</strong> - \r\n                            <span className=\"text-primary\"> {item.major}</span>  \r\n                          </div>  \r\n                          <div className=\"mb-2\">\r\n                            <span className=\"font-weight-bold\">Liên lạc:</span>  \r\n                            <span className=\"ml-2\">{item.phone}</span>\r\n                          </div>\r\n                          <div className=\"mb-0\">\r\n                              <span className=\"font-weight-bold\">Còn lại: \r\n                                <span className=\"text-primary ml-2\">\r\n                                  {numberOfTaskInProgress.length}\r\n                                </span>\r\n                              </span>\r\n                              <span className=\"mx-2\">|</span>\r\n                              <span className=\"font-weight-bold\">Đã hoàn thành:\r\n                                <span className=\"text-danger ml-2\">\r\n                                    {numberOfTaskComplete.length}\r\n                                </span>\r\n                              </span>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"main-info-right col-xs-6 col-lg-6 col-md-12 col-sm-12 mt-lg-0 mt-sm-3\">\r\n                          <div className=\"mb-2\">\r\n                            <span className=\"font-weight-bold\">Trình độ:</span> \r\n                            <span className=\"text-capitalize ml-2\">{item.level}</span>\r\n                          </div>\r\n                          <div className=\"mb-2\">\r\n                            <span className=\"font-weight-bold\">Chức vụ:</span>\r\n                            <span className=\"ml-2\">{item.position}</span> \r\n                          </div>\r\n                          <div className=\"mb-0\">\r\n                            <span className=\"text-info\">{item.email}</span>\r\n                          </div>\r\n                        </div>\r\n                    </div>\r\n                    {/*Thông tin user*/}\r\n                    {/*Thanh tiến trình*/}\r\n                    <div className=\"item-progress-bar w-100 mt-3\">\r\n                      <Tooltip placement=\"topRight\"  \r\n                        title={() => (\r\n                          <Fragment>\r\n                            <p className=\"mb-0\">Tất cả:<span className=\"text-info ml-2\">{item.task.length}</span></p>\r\n                            <p className=\"mb-0\">Đang:<span className=\"text-info ml-2\">{numberOfTaskInProgress.length}</span></p>\r\n                            <p className=\"mb-0\">Hoàn thành:<span className=\"text-info ml-2\">{numberOfTaskComplete.length}</span></p>\r\n                            <p className=\"mb-0\">Tạm gián đoạn:<span className=\"text-info ml-2\">{numberOfTaskSuspended.length}</span></p>\r\n                          </Fragment>\r\n                        )}\r\n                      >\r\n                        <Progress \r\n                          status={numberOfTaskSuspended.length ? \"exception\" : (parseInt((numberOfTaskComplete.length/item.task.length)*100) === 100 ? \"success\" : \"active\") }\r\n                          percent={\r\n                            parseInt((numberOfTaskComplete.length/item.task.length)*100)\r\n                          }\r\n                        />               \r\n                      </Tooltip>\r\n                    </div>\r\n                    {/*Thanh tiến trình*/}\r\n                    {/*task*/}\r\n                    <div className=\"card-wrapper border mt-3\">\r\n                        <div className=\"card-header d-flex justify-content-between\">\r\n                            <a className=\"collapsed\" data-toggle=\"collapse\" href=\"#collapse-wrapper\">{item.task.length ? \"Xem công việc\" : \"Chưa có công việc nào\"}</a>\r\n                            <a data-toggle=\"collapse\" className=\"collapsed btn btn-default btn-xs text-right\" href={`#collapse-wrapper-${item.id}`}>\r\n                              <i className=\"collapsed-icon fa\"></i>\r\n                            </a>\r\n                        </div>\r\n                        <div id={`collapse-wrapper-${item.id}`} className=\"collapse\">\r\n                          <div className=\"list-group\">\r\n                            {/*Create task*/}\r\n                            {item.task.map((task, index) => {\r\n                              const {fontIcon , color} = this.renderStyleOfTaskStatus(task);\r\n                              return (\r\n                                <div className=\"list-group-item collapse-item-border px-3\" key={task.taskId}>\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <a className=\"d-flex text-dark \" data-toggle=\"collapse\" href={`#collapse-item-${task.taskId}`}>\r\n                                          <i className=\"fa fa-pencil-square-o mt-1 mr-2\"></i>\r\n                                          <p className=\"mb-0 pr-3 text-break\" style={{marginTop: \"-2px\"}}>{task.name} <span style={{marginTop: \"-2px\"}} className=\"font-weight-bold font-size-14\">({task.status})</span></p>\r\n                                        </a>\r\n                                      <div className=\"d-flex\"> \r\n                                        <Tooltip placement=\"top\" title={\"Sửa\"}>\r\n                                          <a href=\"/#\" onClick={(e) => this.handleOpenModalPopup(e, \"edit\", item, task)}>\r\n                                            <i className=\"fa fa-pencil-square text-dark\" ></i>\r\n                                          </a>\r\n                                        </Tooltip>\r\n                                        <Tooltip placement=\"top\" title={\"Xóa\"}>\r\n                                          <a href=\"/#\" onClick={(e) => this.handleDeleteOneTaskWorkManager(e, item.id , task.taskId)}>\r\n                                            <i className=\"fa fa-trash text-dark\" ></i>                              \r\n                                          </a>\r\n                                        </Tooltip>\r\n                                        <Tooltip placement=\"top\" title={\"Chi tiết\"}>\r\n                                          <a  data-toggle=\"collapse\" className=\"collapsed\" href={`#collapse-item-${task.taskId}`}>\r\n                                              <i className=\"collapsed collapsed-icon fa text-dark\" aria-hidden=\"true\"></i>\r\n                                          </a>\r\n                                        </Tooltip>\r\n                                      </div>\r\n                                    </div>\r\n                                    <div id={`collapse-item-${task.taskId}`} className=\"collapse\">\r\n                                      <div className=\"d-flex flex-column pl-3\">\r\n                                        <div className=\"mt-1 \" data-toggle=\"tooltip\" data-placement=\"left\" title=\"Deadline\">\r\n                                          <i className=\"fa fa-clock-o mr-2\"></i> \r\n                                          Bắt đầu  <span className=\"font-weight-bold text-primary\"> {moment(task.startDate).format(\"h:mm A, DD/MM/YYYY\")} </span>\r\n                                          <span className=\"mx-2\">|</span> \r\n                                          Hạn chót <span className=\"font-weight-bold text-danger\"> {moment(task.endDate).format(\"h:mm A, DD/MM/YYYY\")} </span>\r\n                                          (Còn {moment(task.endDate).diff(task.startDate,'day')} ngày)\r\n                                        </div>\r\n                                        <div  className=\"mt-1 \" data-toggle=\"tooltip\" data-placement=\"left\" title=\"Tình trạng\">\r\n                                          <i className={`fa ${fontIcon} mr-2`} ></i> \r\n                                          <Tag color={color}>{task.status}</Tag>\r\n                                        </div>\r\n                                        <div  className=\"mt-1 \" data-toggle=\"tooltip\" data-placement=\"left\" title=\"Thời gian tạo\">\r\n                                          <i className={`fa fa-calendar mr-2`} ></i>\r\n                                          <div className=\"d-inline\">\r\n                                            <span>Tạo lúc: <span className=\"text-primary\">{task.createDate ? moment(task.createDate).format(\"h:mm:ss, DD/MM/YYYY\") : \"\"}</span></span>\r\n                                            <span className=\"mx-2\">|</span>\r\n                                            <span>Cập nhật lần cuối: <span className=\"text-danger\">{task.updateDate ? moment(task.updateDate).format(\"h:mm:ss, DD/MM/YYYY\") : \"\"}</span></span>\r\n                                            <span></span>\r\n                                          </div>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                </div>\r\n                              )\r\n                            })}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      {/*task*/}\r\n                    <div className=\"info-actions mt-3\">\r\n                        <Button type=\"danger\" onClick={() => this.hanleDeleteAllTaskWorkManager(item.id)} block>\r\n                          Xóa toàn bộ\r\n                          <Icon type=\"delete\" />\r\n                        </Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )\r\n      } \r\n        else {\r\n          return null\r\n        }\r\n      })\r\n    }\r\n    // xử lý nếu ko có task nào thì hiển thị thông báo chưa có công việc\r\n    // Hàm every check toàn bộ item xem có pass được điều kiện ko, trả về boolean \r\n    const isEmptyTask = result.every((x) =>  !x);\r\n    if(isEmptyTask){\r\n        return result = <h4 className=\"text-center\">Chưa có công việc nào được giao</h4>;\r\n    }\r\n    else{\r\n      return result;\r\n    }\r\n  }\r\n\r\n  renderStyleOfTaskStatus = (task) => {\r\n    if(task.status){\r\n      switch (task.status) {\r\n        case \"Bắt đầu\":\r\n          return {\r\n            fontIcon: \"fa-hourglass-start\",\r\n            color: \"#108ee9\"\r\n          }\r\n        case \"Trong tiến trình\":\r\n          return {\r\n            fontIcon: \"fa-hourglass-half\",\r\n            color: \"#2db7f5\"\r\n          }\r\n        case \"Hoàn thành\":\r\n          return {\r\n            fontIcon: \"fa-check\",\r\n            color: \"#87d068\"\r\n          }\r\n        case \"Tạm gián đoạn\":\r\n          return {\r\n            fontIcon: \"fa-times\",\r\n            color: \"#f50\"\r\n          }\r\n        default:\r\n          return \"\";\r\n      }\r\n    }\r\n  }\r\n\r\n  renderNumberOfTaskStatus = (task) => {\r\n    const numberOfTaskComplete = [],\r\n          numberOfTaskInProgress = [],\r\n          numberOfTaskSuspended = []; \r\n    task.filter((task) => {\r\n        if(task.status === \"Hoàn thành\"){\r\n          numberOfTaskComplete.push(task)\r\n        }\r\n        else if(task.status === \"Tạm gián đoạn\"){\r\n          numberOfTaskSuspended.push(task)\r\n          numberOfTaskInProgress.push(task)\r\n        }\r\n        else if(task.status === \"Bắt đầu\" || task.status === \"Trong tiến trình\"){\r\n          numberOfTaskInProgress.push(task)\r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n    })\r\n    return {\r\n      numberOfTaskComplete,\r\n      numberOfTaskInProgress,\r\n      numberOfTaskSuspended\r\n    }\r\n  }\r\n\r\n  renderSkeleton = () => {\r\n    return (\r\n      <Fragment>\r\n        <Skeleton active avatar>\r\n        </Skeleton>\r\n        <Skeleton active avatar>\r\n        </Skeleton>\r\n        <Skeleton active avatar>\r\n        </Skeleton>\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  onChangePage = (data) => {\r\n    this.setState({\r\n\t\t\tstartIndex: data.startIndex,\r\n      endIndex: data.endIndex,\r\n      currentPage: data.currentPage,\r\n      totalPages: data.totalPages\r\n\t\t});\r\n  }\r\n\r\n  render() {\r\n    console.log(\"Work manager\");\r\n    var { userList, searchText, isLoading , userById, taskById} = this.props;\r\n    var {startIndex, endIndex, currentPage, totalPages} = this.state;\r\n    const suggestionValue = userList;\r\n    if (searchText) {\r\n      userList = userList.filter((item) => {\r\n        const data =\r\n          filterText(item.name)\r\n            .toLowerCase()\r\n            .trim()\r\n            .includes(searchText.toLowerCase()) ||\r\n          filterText(item.email)\r\n            .toLowerCase()\r\n            .trim()\r\n            .replace(/\\s+/g, \"\")\r\n            .includes(searchText.toLowerCase()) || \r\n            filterText(item.position)\r\n            .toLowerCase()\r\n            .trim()\r\n            .includes(searchText.toLowerCase()) ||\r\n          filterText(item.level)\r\n            .toLowerCase()\r\n            .trim()\r\n            .includes(searchText.toLowerCase()) ||\r\n          filterText(item.major)\r\n            .toLowerCase()\r\n            .trim()\r\n            .includes(searchText.toLowerCase()) ||\r\n          filterText(item.phone)\r\n            .toLowerCase()\r\n            .trim()\r\n            .replace(/\\s+/g, \"\")\r\n            .includes(searchText.toLowerCase());\r\n        return data;\r\n      });\r\n    }\r\n\r\n    var taskList = [];\r\n    var renderTaskList = [];\r\n    if(userList.length > 0){\r\n      taskList = userList.filter((user) => {\r\n        return user.task // trả về user có tồn tại task\r\n      })\r\n    }\r\n\r\n    renderTaskList = taskList.slice(startIndex, endIndex + 1)\r\n    \r\n    return (\r\n      <Fragment>\r\n        <Row gutter={[0, { xs: 32, sm: 32, md: 32, xl: 32 }]}>\r\n          <Col xs={24} sm={24} md={16} lg={8} xl={10}>\r\n            <SearchControl\r\n              searchUser={this.props.actions.searchUserWorkManager}\r\n              suggestionValue={suggestionValue}\r\n            />\r\n          </Col>\r\n          <Col xs={24} sm={24} md={16} lg={8} xl={14}>\r\n              <div className=\"row\">\r\n                  <div className=\"col-12 \">\r\n                      <p className=\"text-right mx-lg-3 mx-sm-0 mb-0 font-size-14\">Có {taskList.length} bảng | Trang {currentPage}/{totalPages}</p>\r\n                  </div>\r\n              </div>\r\n          </Col>\r\n        </Row>\r\n        <div className=\"row job-wrapper\">\r\n          <div className=\"col-xs-6 col-lg-6 col-md-12 col-sm-12\" style={{borderRight: \"1px solid #ccc\"}}>\r\n            <Spin className=\"d-flex justify-content-center\" tip=\"Xin vui lòng đợi...\" spinning={isLoading}>\r\n              <div className=\"list-group list-overflow list-group-flush\">\r\n                  {isLoading ? <Empty style={{marginTop: \"150px\"}} image={Empty.PRESENTED_IMAGE_SIMPLE} /> : this.renderUser(userList)}\r\n              </div>\r\n            </Spin>\r\n          </div>\r\n          <div className=\"col-xs-6 col-lg-6 col-md-12 col-sm-12 job-item mb-0 mt-lg-0 mt-sm-5\">\r\n              {isLoading ? this.renderSkeleton() : this.renderTask(renderTaskList)}\r\n          </div>\r\n          <div className=\"mt-3 ml-auto\">\r\n            <Pagination \r\n              totalItem={taskList.length || 0} \r\n              onChangePage={this.onChangePage} \r\n            />\r\n          </div>\r\n        </div>\r\n        <WorkManagerForm isLoading={isLoading} userById={userById} taskById={taskById} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userList: state.workManagerReducer.userList,\r\n    searchText: state.workManagerReducer.searchText,\r\n    isLoading: state.workManagerReducer.isLoading,\r\n    userById: state.workManagerReducer.userById,\r\n    taskById: state.workManagerReducer.taskById,\r\n    oneUser: state.workManagerReducer.oneUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    actions: bindActionCreators({ ...WorkManagerActions, ...ModalPopupActions }, dispatch),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WorkManager);\r\n"],"sourceRoot":""}